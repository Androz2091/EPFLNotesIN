% Remark: LaTeX files using this style needs to be compiled through LuaLaTeX, since it uses the luacode package and the luaexec command.
\usepackage{luacode}

\usepackage[british]{babel}
\usepackage[T1]{fontenc}
\usepackage{fontspec}
% \usepackage[utf8]{inputenc}  % useless for LuaLaTex
\usepackage[bottom=2.5cm, top=2.5cm, left=2.5cm, right=2.5cm]{geometry}
\setlength{\columnsep}{1cm}
\usepackage{fancyhdr}
\usepackage{lmodern}
\usepackage{microtype}
\usepackage[nobottomtitles, raggedright]{titlesec} % https://tex.stackexchange.com/a/360454
\usepackage[all]{nowidow}  % remove widow and orhpan lines

\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{esint}
\usepackage{environ}
\usepackage{empheq}
\usepackage{bm}
\usepackage{tabularx}

\usepackage[nointegrals]{wasysym}
\usepackage{siunitx}
\sisetup{parse-numbers = false}
\sisetup{per-mode = symbol}
\usepackage{xcolor}
\usepackage{listings}

\usepackage[hyphens]{url}
\usepackage[breaklinks, hidelinks]{hyperref}
\usepackage{ifthen}
\usepackage{xifthen}
\usepackage{calc}
\usepackage[useregional, showdow]{datetime2}
\usepackage{changepage}
\usepackage{enumitem}
\usepackage{multirow}
\usepackage[skins,breakable]{tcolorbox}

\usepackage{tocloft}
\usepackage{mdframed}
\usepackage{ragged2e}
\usepackage{textpos}
\usepackage{needspace}
\usepackage[super]{nth}  % for the \nth command
\usepackage{centernot}  % for \centernot command
\usepackage{hhline}  % Soruce : https://tex.stackexchange.com/a/373342/252510
\usepackage{svg}  % For \includesvg command (needs -shell-escape when compiling and inkscape)
\usepackage{dsfont} % for \mathds{1}
\usepackage{diagbox} % for \diagbox command, for tables

\usepackage{pgfplots}
%\pgfplotsset{width=10cm, height=10cm, compat=1.8}
%\usepgfplotslibrary{external}
%\tikzexternalize

% \usepackage[Glenn]{fncychap}

% \let\oldpart\part
% \renewcommand\part[1]{\oldpart{\fullbf{#1}}}
% \@ifclassloaded{article}{}{  % https://tex.stackexchange.com/a/46225/252510
% \let\oldchapter\chapter%
% \renewcommand\chapter[1]{\oldchapter{\fullbf{#1}}}%
% }
% \let\oldsection\section
% \renewcommand\section[1]{\oldsection{\fullbf{#1}}}
% \let\oldsubsection\subsection
% \renewcommand\subsection[1]{\oldsubsection{\fullbf{#1}}}
% \let\oldsubsubsection\subsubsection
% \renewcommand\subsubsection[1]{\oldsubsubsection{\fullbf{#1}}}

% This is a very bad idea since it removes page equalising.
% However, I want to have a very hard control over where
% my pictures are, so I don't really have any other way
\raggedbottom  % source: https://tex.stackexchange.com/a/65356

\definecolor{maincolour}{HTML}{004A7F}
\definecolor{fullpurple}{HTML}{FF00FF}

\setcounter{tocdepth}{3}  % set to 4 to show parags in table of content
\setlength{\parindent}{0pt}
\setlength{\parskip}{2pt}

\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}

\setlist{left=15pt, noitemsep, topsep=\parskip, itemsep=\parskip}
\renewcommand\descriptionlabel[1]{$\bullet\ $ \fullbf{#1}}

% Source: https://tex.stackexchange.com/a/468319
% \renewcommand\tabularxcolumn[1]{m{#1}}
\newcolumntype{C}{>{\centering\arraybackslash}X}

% Source
\def\hrulefill{\leavevmode\leaders\hrule height 1pt\hfill\kern\z@}

% Source: https://tex.stackexchange.com/a/123669
\AtBeginDocument{\def\labelitemi{$\bullet$}}

\definecolor{backgroundColourDark}{rgb}{0.17, 0.17, 0.17}
\definecolor{backgroundColourLight}{rgb}{0.95, 0.95, 0.95}
\definecolor{commentColour}{rgb}{0.32, 0.50, 0}
\definecolor{keywordColour}{rgb}{0.84, 0.62, 0.46}
\definecolor{numberColour}{rgb}{0, 0, 0}
\definecolor{stringColourLight}{rgb}{1, 0.47, 0.78}
\definecolor{stringColourDark}{rgb}{0.69, 0.90, 0.53}
\definecolor{basicColourLight}{rgb}{0, 0, 0}
\definecolor{basicColourDark}{rgb}{1, 1, 1}

\lstdefinestyle{light}{
    backgroundcolor=\color{backgroundColourLight},
    commentstyle=\color{commentColour},
    keywordstyle=\bf\color{maincolour},
    numberstyle=\tiny\color{numberColour},
    stringstyle=\color{stringColourLight},
    basicstyle=\ttfamily\footnotesize\color{basicColourLight},
    % numbers=left,
    breakatwhitespace=false,
    breaklines=true,
    showstringspaces=false,
    framextopmargin=0mm,
    frame=tlrb,
}

\lstdefinestyle{dark}{
    backgroundcolor=\color{backgroundColourDark},
    commentstyle=\color{commentColour},
    keywordstyle=\bf\color{maincolour},
    numberstyle=\tiny\color{numberColour},
    stringstyle=\color{stringColourDark},
    basicstyle=\ttfamily\footnotesize\color{basicColourDark},
    % numbers=left,
    breakatwhitespace=false,
    breaklines=true,
    showstringspaces=false,
    framextopmargin=0mm,
    frame=tlrb,
}

\lstdefinelanguage{pseudo}{
    morekeywords = {procedure, return, define, function,
                    array, integer, integers, real, number, numbers,
                    and, or,
                    select, let,
                    while, for, in, to, is,
                    if, then, else},
    morecomment=[l]{//}
}

\lstset{style=light}

\newcommand{\importcode}[2]{

\needspace{2em}
\lstinputlisting[language=#2]{#1}
}

%\pagecolor[rgb]{0,0,0}
%\color[rgb]{1, 1, 1}

% To have $f\left(x\right)$ and $f(x)$ look the same (without an extra space around the parentheses).
% Source: https://tex.stackexchange.com/a/2610
\let\originalleft\left
\let\originalright\right
\renewcommand{\left}{\mathopen{}\mathclose\bgroup\originalleft}
\renewcommand{\right}{\aftergroup\egroup\originalright}

\newcommand{\mathspace}{\quad}
\newcommand{\eval}{\Big|}
\newcommand{\bvec}[1]{\bm{\protect\vec{#1}}}
\newcommand{\bhat}[1]{\bm{\hat{#1}}}  % could use widehat, but is strange
\newcommand{\bcheck}[1]{\bm{\check{#1}}}
\newcommand{\degree}{^\circ}
\newcommand{\telque}{\text{ tel que }}
\newcommand{\suchthat}{\text{\ |\ }}
\newcommand{\contradiction}{\text{\lightning}}
\newcommand{\imagehere}[2][1]{\begin{center}\includegraphics[width=#1\textwidth]{#2}\end{center}}
\newcommand{\svghere}[2][1]{\begin{center}\includesvg[width=#1\textwidth]{#2}\end{center}}
\newcommand{\svgherenolatex}[2][1]{\begin{center}\includesvg[inkscapelatex=false, width=#1\textwidth]{#2}\end{center}}
\newcommand{\pdfhere}[1]{{\centering\includegraphics{#1}}}

\DeclareMathOperator{\cre}{\mathbb{R}e}
\DeclareMathOperator{\cim}{\mathbb{I}m}

% Source: https://latex.org/forum/viewtopic.php?t=10866
\newcommand{\fullbf}[1]{{\boldmath\textbf{#1}}}
\newcommand{\important}[1]{\textcolor{maincolour}{\fullbf{#1}}}
\newcommand{\question}[1]{
  \textcolor{red}{\fullbf{#1}}
  \phantomsection
  \addcontentsline{questions}{chapter}{p.\thepage : #1}
}
\newcommand{\demonstrationaconnaitre}{\vspace{1em}\begin{center}\textcolor{red}{\fullbf{La démonstration de ce théorème doit être connue pour l'examen.}}\end{center}\vspace{1em}}
\newcommand{\later}[1]{\textcolor{orange}{\fullbf{[#1]}}}
\newcommand{\dotprod}{\bullet}

\newcommand{\qed}{
\begin{flushright} $\square$ \end{flushright}

}
\newcommand{\clearemptydoublepage}{
  \clearpage\
  {\pagestyle{empty}\cleardoublepage}
} % Source: https://latexref.xyz/_005cclearpage-_0026-_005ccleardoublepage.html
\newcommand{\Th}{\textsuperscript{th}\ }  % th and TH already defined
\newcommand{\matricepassage}[2]{\mathop{P}_{\mathcal{#1} \leftarrow \mathcal{#2}}}
\newcommand{\wink}{;)}
\newcommand{\divides}{\mid}
\newcommand{\ndivides}{\centernot\divides}
\newcommand{\exval}{\mathbb{E}}
\newcommand{\prob}{\mathbb{P}}
\DeclareMathOperator{\Var}{Var}
\DeclareMathOperator{\Cov}{Cov}
\DeclareMathOperator{\corr}{corr}
\newcommand{\independent}{\mathrel{\perp\!\!\!\perp}}
\newcommand{\followsdistr}{\sim}
\newcommand{\iid}{\over{\sim}{iid}}

\let\originalbar\bar
\renewcommand{\bar}{\overline}
\let\originalover\over
\renewcommand{\over}[2]{\overset{\text{#2}}{#1}}
\renewcommand{\textrightarrow}{$\rightarrow\ $}
\renewcommand{\textleftarrow}{$\leftarrow\ $}
\renewcommand{\textleftrightarrow}{$\leftrightarrow\ $}
\let\originaltilde\tilde
\renewcommand{\tilde}{$\sim\ $}
\let\originalo\o
\renewcommand{\o}{\text{\originalo}}

\newcommand{\hex}[1]{\text{0x#1}}


\DeclareMathOperator{\Span}{span}
\DeclareMathOperator{\vect}{vect}
\DeclareMathOperator{\im}{Im}
\DeclareMathOperator{\rang}{rang}
\DeclareMathOperator{\lgn}{Lgn}
\DeclareMathOperator{\ligne}{ligne}
\DeclareMathOperator{\rank}{rank}

\DeclareMathOperator{\dist}{dist}
\DeclareMathOperator{\proj}{proj}

\DeclareMathOperator{\lcm}{lcm}
\DeclareMathOperator{\ppmc}{ppmc}
\DeclareMathOperator{\pgdc}{pgdc}

\DeclareMathOperator{\Div}{div}
\DeclareMathOperator{\Mod}{mod}

\DeclareMathOperator{\grad}{grad}
\DeclareMathOperator{\rot}{rot}

\DeclareMathOperator{\Res}{Res}

% Source: https://tex.stackexchange.com/a/97246
\DeclareMathOperator{\tg}{tg}
\DeclareMathOperator{\tgh}{tgh}
\DeclareMathOperator{\ctg}{ctg}
\DeclareMathOperator{\ctgh}{ctgh}
\DeclareMathOperator{\arctg}{arctg}
\DeclareMathOperator{\arctgh}{tgh}
\DeclareMathOperator{\arcctg}{arcctg}
\DeclareMathOperator{\arcctgh}{ctgh}
\DeclareMathOperator{\sech}{sech}
\DeclareMathOperator{\csch}{csch}
\DeclareMathOperator{\arcsec}{arcsec}
\DeclareMathOperator{\arccot}{arccot}
\DeclareMathOperator{\arccsc}{arccsc}
\DeclareMathOperator{\arccosh}{arccosh}
\DeclareMathOperator{\arcsinh}{arcsinh}
\DeclareMathOperator{\arctanh}{arctanh}
\DeclareMathOperator{\arcsech}{arcsech}
\DeclareMathOperator{\arccsch}{arccsch}
\DeclareMathOperator{\arccoth}{arccoth}

\DeclareMathOperator{\sinc}{sinc}

\DeclareMathOperator{\Arcsin}{Arcsin}
\DeclareMathOperator{\Arccos}{Arccos}
\DeclareMathOperator{\sh}{sh}
\DeclareMathOperator{\ch}{ch}
\DeclareMathOperator{\badth}{th}
\DeclareMathOperator{\Argsh}{argsh}
\DeclareMathOperator{\Taylor}{Taylor}
\DeclareMathOperator{\MacLaurin}{MacLaurin}
\DeclareMathOperator{\supp}{supp}
\DeclareMathOperator{\Hess}{Hess}
\DeclareMathOperator{\Tr}{Tr}

\DeclareMathOperator{\sgn}{sgn}
\DeclareMathOperator{\sign}{sign}

\DeclareMathOperator*{\argmin}{argmin}
\DeclareMathOperator*{\argmax}{argmax}
\DeclareMathOperator{\cond}{cond}
\DeclareMathOperator{\ulp}{ulp}

\newcommand{\congruent}[3]{#1 \equiv #2\ (\Mod #3)}
\newcommand{\notcongruent}[3]{#1 \not\equiv #2\ (\Mod #3)}

% ouint and odint define the direction (up or down) of the right part of the arrow (I think that it is simpler when taking notes than thinking whether it is clockwise)
\let\originaloiint\oiint
\renewcommand{\oiint}{\varoiint}
\newcommand{\odint}{\varointclockwise}
\newcommand{\ouint}{\ointctrclockwise}

\let\originalepsilon\epsilon
\renewcommand{\epsilon}{\varepsilon}

\let\originalphi\phi
\renewcommand{\phi}{\varphi}

% taken from https://www.ctan.org/pkg/trfsigns
\newcommand{\fourierpair}{%
    \ %
    \mbox{\setlength{\unitlength}{0.1em}%
    \begin{picture}(20,10)%
        \put(2,3){\circle{4}}%
        \put(4,3){\line(1,0){13}}%
        \put(18,3){\circle*{4}}%
    \end{picture}%
    }% 
    \ %
}

\newcommand{\dtfourierpair}{\longleftrightarrow}

% Source: https://tex.stackexchange.com/a/5652
\NewEnviron{multiequality}{\begin{equation*}\begin{split} \BODY \end{split}\end{equation*}}
\NewEnviron{multiequation}{\begin{equation*}\begin{split} \BODY \end{split}\end{equation*}}

\NewEnviron{systemofequations}{\begin{cases} \BODY \end{cases}}
\NewEnviron{functionbypart}[1]{\begin{equation*}#1 = \begin{dcases} \BODY \end{dcases}\end{equation*}}
\newcommand{\piecewisefunc}[4]{\unexpanded{\begin{systemofequations} #1, & #2 \\ #3, & #4 \end{systemofequations}}}

\newcommand{\multicolumnX}[2]{\multicolumn{#1}{>{\hsize=\dimexpr#1\hsize+#1\tabcolsep+\arrayrulewidth\relax}X}{#2}}

\newbox\titlebox
\newlength\titleheight
\newbox\contentbox
\newlength\contentheight
\newlength\neededspace
\newbox\paragbox
\newbox\subparagbox
\newlength\paragheight
\newlength\subparagheight
\newcommand{\twosimultaneously}[5]{ % size left, space middle, size left, content left, content right
% Inspired (stolen) from https://tex.stackexchange.com/a/271436/252510
% The right content can span over multiple pages
    \sbox\titlebox{
        \begin{minipage}[c]{#1}\vspace{0pt}
            #4
        \end{minipage}
    }
    \sbox\contentbox{
        \begin{minipage}[c]{#3}\vspace{0pt}
            #5
        \end{minipage}
    }
    \setlength\titleheight{\ht\titlebox}
    \setlength\contentheight{\ht\contentbox}
    \setlength\neededspace{\titleheight - \contentheight}
    \begin{tcolorbox}[
      blanker,
      width=#3,enlarge left by=(#1 + #2),
      before skip=6pt,
      breakable,
      overlay unbroken and first={%
        \node[inner sep=0pt,outer sep=0pt,text width=#1,
          align=none,
          below right]
          at ([xshift=-(#1 + #2)]frame.north west)
      {%
        #4
      };}]
    #5
    \ifthenelse{\titleheight > \contentheight}{\vspace{2\neededspace}}{}  % Why 2? That's actually quite a good question, but it works perfectly.
    \end{tcolorbox}
}

\newcommand{\parag}[2]{
    % Title needs not to have break lines, else there will be a compilation problem
    \ifthenelse{\isempty{#1}}{}{\addcontentsline{toc}{paragraph}{#1}}
    \twosimultaneously{3cm}{0.3cm}{\textwidth - 3.3cm}{\fullbf{\RaggedRight #1}}{#2}
    \vspace{\parskip}%
}

% Inspired from https://tex.stackexchange.com/a/86389/252510
\newmdenv[
  topline=false,
  bottomline=false,
  rightline=false,
  skipabove=0pt,
  skipbelow=0pt
]{lineleft}


\newcommand{\subparag}[2]{
    \begin{minipage}[t]{\textwidth}
       \begin{lineleft}
           \begin{minipage}[t]{2cm}\vspace{0pt}
                \RaggedRight\textit{\footnotesize #1}
           \end{minipage}
           \hfill
           \begin{minipage}[t]{\textwidth - 2.5cm}\vspace{0pt}
               #2
           \end{minipage}
       \end{lineleft}
    \end{minipage}
    \vspace{\parskip}%
}

% Only works in article documenttype, and not perfectly
% \newcommand{\paragsubparag}[3]{%
%     \begin{lineleft}[innerleftmargin=-3.1cm, leftmargin=3.1cm, innertopmargin=-1mm]%
%         \twosimultaneously{5.3cm}{0.5cm}{\textwidth - 5.8cm}{%
%             \vspace{-6pt}  % 6 pt is full trial and error with #1 and #2 without their italic or bold font, and verifying horizontal alignment with paint.net (not a url)
%             \twosimultaneously{3cm}{0.3cm}{2cm}{%
%                 \RaggedRight\textbf{#1}%
%             }{
%                 \vspace{1.5pt}  % same, trial and error
%                 \RaggedRight\textit{\footnotesize #2}
%             }
%         }{\begin{samepage}#3\end{samepage}}%
%     \end{lineleft}
%     \vspace{\parskip}%
% }

% Works, but not beautiful
%\newcommand{\paragsubparag}[3]{%
%    \twosimultaneously{5.3cm}{0.5cm}{\textwidth - 5.8cm}{%
%        \twosimultaneously{3cm}{0.3cm}{2cm}{%
%            \RaggedRight\textbf{#1}%
%        }{%
%            \RaggedRight\textit{\footnotesize #2}%
%        }%
%    }{#3}%
%    \vspace{\parskip}%
%}

% inspired from https://tex.stackexchange.com/a/242086
\newtcolorbox{tcbsiderules}[1][]{blanker, breakable,
     left=0pt, right=0pt, top=0pt, bottom=\parskip,
     borderline west={0.1mm}{-2.5cm}{black}, #1}

\setlength{\TPHorizModule}{1cm}
\newcommand{\paragsubparag}[3]{
    \sbox\paragbox{
        \begin{minipage}[c]{3cm}
            \vspace{0.5em}
            \fullbf{\RaggedRight #1}
            \vspace{0.5em}
        \end{minipage}
    }
    \sbox\subparagbox{
        \begin{minipage}[c]{2cm}
            \vspace{0.5em}
            \RaggedRight\textit{\footnotesize#2}
            \vspace{0.5em}
        \end{minipage}
    }
    \sbox\contentbox{
        \begin{minipage}[c]{\textwidth - 5.8cm}\vspace{0pt}
            #3
        \end{minipage}
    }
    \setlength\paragheight{\ht\paragbox}
    \setlength\subparagheight{\ht\subparagbox}
    \setlength\contentheight{\ht\contentbox}
    \setlength\neededspace{\subparagheight - \contentheight}
    \needspace{2\paragheight}
    \needspace{2\subparagheight}
    \begin{adjustwidth}{5.8cm}{0cm}%
        \begin{tcbsiderules}%
            \begin{textblock}{3}(-5.8, -0.015)%
                \RaggedRight\fullbf{#1}
            \end{textblock}%5
            \begin{textblock}{2}(-2.3, 0.015)  % 3.5 - 5.8 = -2.3
                \RaggedRight\textit{\footnotesize#2}
            \end{textblock}%
            \nopagebreak%
            #3
            \ifthenelse{\subparagheight > \contentheight}{\vspace{2\neededspace}}{}  % Why 2? That's actually quite a good question, but it works perfectly.
        \end{tcbsiderules}
    \end{adjustwidth}

}

% For the capital letter (it's a bad way to do it, but it's the only way I found)
% DTMWeekdayname should work, but it does not in French
\def\DTMfrenchweekdayname#1{%
  \ifcase#1
  Lundi%
  \or
  Mardi%
  \or
  Mercredi%
  \or
  Jeudi%
  \or
  Vendredi%
  \or
  Samedi
  \or
  Dimanche%
  \fi
}

\DTMlangsetup[en-GB]{ord=raise}
\newcommand{\lecture}[4]{  % #1: lecture no, #2: date, #3: title, #4 summary (used in program)
    \needspace{5em}
    \vspace{1em}
    \DTMsavedate{lectureDate}{#2}
    \def\emptyvariable{}
    % Ifthenelse does not work in addcontentsline
    \def\lecturename{\fullbf{\ifx\bbl@loaded\french Cours \else Lecture \fi #1 \ifx\emptyvariable#3\else: #3\fi}}
    \def\datename{\DTMusedate{lectureDate}}
    \phantomsection
    \addcontentsline{lectures}{chapter}{\lecturename\ ---\ \datename}
    \hyperref[lecturesummary#1]{\textcolor{maincolour}{\hrulefill \hspace{5pt} \datename\ ---\ \lecturename}}
    \label{lecture#1}
    \vspace{1em}
    \nopagebreak
}

\newcommand{\lecturetitlesummary}[3]{  % #1: lecture no, #2: date, #3: title
\needspace{5em}
\DTMsavedate{lectureDate}{#2}
\def\lecturename{\fullbf{\ifx\bbl@loaded\french Cours \else Lecture \fi #1 \ifx\emptyvariable#3\else: #3\fi}}
\def\datename{\DTMusedate{lectureDate}}

\hyperref[lecture#1]{\textcolor{maincolour}{\lecturename\ ---\ \datename\ \hrulefill\ \textit{p. \pageref{lecture#1}}}}

\phantomsection
\label{lecturesummary#1}

}

\newcommand\listoflectures{%
  \def\french{french}
  \def\listoflecturestitle{\ifx\bbl@loaded\french Liste des cours \else List of lectures \fi}
  \let\oldleftmark\leftmark
  \def\leftmark{\expandafter\MakeUppercase\expandafter{\listoflecturestitle}}
  \chapter*{\listoflecturestitle}\@starttoc{lectures}
  \cleardoublepage
  \def\leftmark{\oldleftmark}
}

\newcommand{\invinsiblelistofquestions}{  % Want to get the file.questions file for the program, but not the list in the document
\begin{textblock}{10}(-20, -20)\vspace{0pt}
  \@starttoc{questions}
\end{textblock}
}

\def\currentpdf{None}
\newcounter{CurrentSlide}
\newcommand{\defslide}[1]{\setcounter{CurrentSlide}{#1}}
\newcommand{\importslides}[1]{\def\currentpdf{#1} \setcounter{CurrentSlide}{1}}

\newlength\slideheight
\newdimen\height

\NewEnviron{slidecomment}{

    \def\CurrentSlidePDF{\includegraphics[width=0.5\textwidth, page=\theCurrentSlide]{\currentpdf}}
    \setlength\slideheight{\heightof{\CurrentSlidePDF}}
    %
    \setbox0=\hbox{\begin{minipage}[c]{0.48\textwidth}\BODY\end{minipage}}
    \height=\ht0 \advance\height by \dp0
    %
    \ifthenelse{\height < \slideheight}{
        \centering
        \begin{minipage}[c]{0.48\textwidth}
            \frame{\includegraphics[width=\textwidth, page=\theCurrentSlide]{\currentpdf}}
        \end{minipage}
        \hfill
        \begin{minipage}[c][\slideheight]{0.48\textwidth}
            \BODY \hphantom{a}
        \end{minipage}
    }{
    \centering
    \begin{minipage}[t]{\textwidth}
        \begin{minipage}[t]{0.48\textwidth}\vspace{0pt}
            \frame{\includegraphics[width=\textwidth, page=\theCurrentSlide]{\currentpdf}}
        \end{minipage}
        \hfill
        \begin{minipage}[t]{0.48\textwidth}\vspace{0pt}
            \BODY \hphantom{a}
        \end{minipage}
    \end{minipage}
    }
    \stepcounter{CurrentSlide}
    %\vspace{-1em}

}

\newcommand{\doubleslide}{
    % I don't know why those four lines are needed, but it fixes a problem of inconsitant spacing.
    \def\CurrentSlidePDF{\includegraphics[width=0.5\textwidth, page=\theCurrentSlide]{\currentpdf}}
    \setlength\slideheight{\heightof{\CurrentSlidePDF}}
    %
    \setbox0=\hbox{\begin{minipage}[c]{0.48\textwidth}I need text here, let's call that an easter egg.\end{minipage}}
    \height=\ht0 \advance\height by \dp0
    %
  \centering
  \begin{minipage}[c]{0.48\textwidth}
      \frame{\includegraphics[width=\textwidth, page=\theCurrentSlide]{\currentpdf}}
  \end{minipage}
  \stepcounter{CurrentSlide}
  \hfill
  \begin{minipage}[c][\slideheight]{0.48\textwidth}
      \frame{\includegraphics[width=\textwidth, page=\theCurrentSlide]{\currentpdf}}
  \end{minipage}
  \stepcounter{CurrentSlide}
}

\newcommand{\skipslide}{

  \stepcounter{CurrentSlide}

}

\newcommand{\fakeequal}{}

\newlength{\eqwidth}
\newcommand{\autoeq}[2][]{%
    % This command allows to automatically format equations and equalities, by splitting them when they are too long. Note that the result might be too long for the line too. You should then decrease the equation or font size.
    % This command needs to be used together with the \unexpanded command. For instance, we could write \autoeq{\unexpanded{1 + 1 = 2}}. There is also an optional parameter, when it is the character s, makes equality sloppy (you can try a very big equality with and without this optional parameter).
    \settowidth{\eqwidth}{$\displaystyle #2$}%
    %
    \luaexec{%
    % ------------------------------------------------------- Functions -------------------------------------------------------
    function replaceSymbols(txt, symbols, before, after)
        for i, symbol in pairs(symbols) do
            % Case we have \over{symbol}{...}. Note that because of internal mechanisms, \over{...}{...} is turned to \over {...}{...} before receiving it
            void, currentIndex = txt:find("\\over {" .. symbol .. [[}{]])       --[[} (we need to close the bracket for LaTeX)]]
            while currentIndex ~= nil do
                % We first look for the content between the brackets by matching those brackts
                insideText = ""
                bracketLevel = 1
                while bracketLevel > 0 do
                    currentIndex = currentIndex + 1
                    currentChar = txt:sub(currentIndex, currentIndex)
                    if (currentChar == "{" or currentChar == "(" or currentChar == "[") then bracketLevel = bracketLevel + 1
                    elseif (currentChar == "}" or currentChar == ")" or currentChar == "]") then bracketLevel = bracketLevel - 1
                    end
                    %
                    if bracketLevel ~= 0 then
                       insideText = insideText .. currentChar
                    end
                end
                % We found the content. Now we replace it, using a placeholder for latter replacement. It would have been nice to use regex, but it is a pain to mach brackets using regular expressions.
                toReplace = "\\over {" .. symbol .. "}{" .. insideText .. "}"
                txt = txt:gsub(literalise(toReplace), before .. "\\over {" .. symbol .. "}{" .. insideText .. "}" .. after)
                % Consider next \over{symbol}{...}
                void, currentIndex = txt:find("\\over {" .. symbol .. [[}{]], currentIndex)       --[[} (we need to close the bracket for LaTeX)]]
            end
            % After having considered all \over{symbol}{...}, we replace all symbols which are not in brackets. This is important, because we don't want to replace the = in "\sum_{i=1}^{n}", nor the ones that were already replaced in the "\over{symbol}"
            bracketLevel = 0
            i = 1
            while i <= \#txt do
                currentChar = txt:sub(i,i)
                % texio.write("symbol=" .. symbol .. " i=" .. i .. " currentChar=" .. currentChar .. " bracketLevel=" .. bracketLevel .. "\noexpand\n")
                if (currentChar == "{" or currentChar == "(" or currentChar == "[") then bracketLevel = bracketLevel + 1
                elseif (currentChar == "}" or currentChar == ")" or currentChar == "]") then bracketLevel = bracketLevel - 1
                end
                startSymb, endSymb = txt:find(symbol, i)
                if bracketLevel == 0 and startSymb == i then
                    txt = txt:sub(1, startSymb-1) .. before .. symbol .. after .. txt:sub(endSymb+1, \#txt)
                    i = endSymb + \#before + \#after
                end
                i = i + 1
            end
        end
        return txt
    end
    % ------------------------------------------------------- Body -------------------------------------------------------
    function literalise(str)  % from https://stackoverflow.com/a/1746473. We need to escape characters which we don't want to be considered as patterns for regular expressions when using gsub.
        return str:gsub("[\%(\%)\%.\%\%\%+\%-\%*\%?\%[\%]\%^\%$]", function(c) return "\%" .. c end)  --[[$ close dollar sign for LaTeX]]
    end
    function countSub(text, sub)
        void, count = text:gsub(sub, "")
        return count
    end
    %
    %
    equationSymbols = {[[\noexpand\iff]], [[\noexpand\implies]], [[\noexpand\impliedby]]}
    equalitySymbols = {"=", "<", ">", [[\noexpand\geq]], [[\noexpand\leq]], [[\noexpand\approx]], [[\noexpand\fakeequal]]}
    %
    optional = [[#1]]
    sloppyEquality = optional == "s"
    text = [[ \expandonce{ #2 } ]]  % the space at the end is very very very important if #2 ends with a ] (else lua does not understand); and it seems like the spaces inside the expand once are also important so I put some everywhere.
    if \ifdim \eqwidth > \textwidth true \else false \fi then  % line is too long
        % Check if in equation (contains given symbols)
        inEquation = false
        for i, value in pairs(equationSymbols) do
            if text:find(value) then
                inEquation = true
                break
            end
        end
        %
        if inEquation then
            text = "&" .. replaceSymbols(text, equationSymbols, [[\string\\ ]], [[ &]])
        else
            % When the equality is not sloppy, we want a carriage return at every equality symbol except for the first one
            % So, we split until the end first symbol (the head) and the rest (the tail)
            if sloppyEquality then
                head = "& "
                tail = text
            else
                smallestIndex = \#text + 1
                for i, symbol in pairs(equalitySymbols) do
                    %
                    j = 1
                    repeat  % need to verify that the character we skip is not in between brackets
                        void, endIndex = text:find(symbol, j)
                        if endIndex then
                            head = text:sub(1, endIndex)
                            openCount = countSub(head, "{") + countSub(head, "\%(") + countSub(head, "\%[")
                            closeCount = countSub(head, "}") + countSub(head, "\%)") + countSub(head, "\%]")
                        end
                        j = j + 1
                    until(not endIndex or openCount == closeCount or j > \#text)
                    %
                    if endIndex and openCount == closeCount and endIndex < smallestIndex then
                        smallestIndex = endIndex
                    end
                end
                  head = text:sub(1, smallestIndex)
                tail = text:sub(smallestIndex + 1, \#text)
            end
            %
            head = replaceSymbols(head, equalitySymbols, "", [[\string\ &]])
            tail = replaceSymbols(tail, equalitySymbols, [[\string\\ ]], [[\string\ &]])
            %
            text = head .. tail
        %
        end
        % Print everything
        tex.print("\string\\[\string\\begin{split}")
        tex.print(text)
        tex.print("\string\\end{split}\string\\]")
        % and log it also
        texio.write("\string\\[\string\\begin{split}")
        texio.write(text)
        texio.write("\string\\end{split}\string\\]")
    else
        tex.print("\string\\[" .. text .. "\string\\]")
    end
    }%
}
